/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
	macros {
		spotlight: spotlight {
			label = "spotlight";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp Z &kp SPACE>
                , <&macro_release &kp LGUI>
                ;
		};

		cut: cut {
			label = "cut";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp Z &kp X>
                , <&macro_release &kp LGUI>
                ;
		};

		copy: copy {
			label = "copy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp Z &kp C>
                , <&macro_release &kp LGUI>
                ;
		};

		paste: paste {
			label = "paste";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp Z &kp V>
                , <&macro_release &kp LGUI>
                ;
		};
	};

	keymap { 
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3    |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
// |   üöÄ  |  Q  |  W  |  E    |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   =   |
// |  TAB  |  A  |  S  |  D    |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C    |  V   |  B   |  ‚û°Ô∏èü™ü  |  |  üîç   |  N   |  M    |  ,    |  .   |   /   |   \   |
//                     | CTRL  |  ALT |  GUI |  SPACE |  | ENTER | RAISE| BSPC  | GUI   |
			bindings = <
&kp ESC         &kp N1 &kp N2     &kp N3     &kp N4       &kp N5                                   &kp N6    &kp N7  &kp N8    &kp N9   &kp N0   &kp MINUS
&kp NON_US_BSLH &kp Q  &kp W      &kp E      &kp R        &kp T                                    &kp Y     &kp U   &kp I     &kp O    &kp P    &kp EQUAL
&kp TAB         &kp A  &kp S      &kp D      &kp F        &kp G                                    &kp H     &kp J   &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT       &kp Z  &mt X cut  &mt C copy &mt V paste  &kp B      &kp C_AL_NEXT_TASK &spotlight &kp N     &kp M   &kp COMMA &kp DOT  &kp FSLH &kp BSLH
                                  &kp LCTRL  &kp LALT     &kp LGUI   &kp SPACE          &kp RET    &kp BSPC  &mo 1   &kp LGUI
			>;
		};

		raise_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 | BT3 |  BT4 |  BT5 |                   | F11  |  F12  |  F8   |  F7  |  F9   |       |
// |  '|'  |  !  |  @  |  ¬£  |   $  |   %  |                   | '^'  |   &   |   ^   |  *   |       |       |
// |   `   |  {  |  }  |  (  |   )  |   =  |                   |   ?  |   <-  |   v   |  ->  |   :   |   "   |
// |       |  [  |  ]  |  -  |   _  |   +  |        |  |       |   ~  |   <   |   >   |      |       |       |
//                     |     |      |      |        |  |       |      |       |       |
			bindings = <
&bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_SEL 4                &kp F11    &kp F12   &kp F8    &kp F7    &kp F9    &trans
&kp PIPE    &kp EXCL     &kp AT       &kp HASH     &kp DLLR      &kp PRCNT                   &kp CARET  &kp AMPS  &kp UP    &kp STAR  &trans    &trans
&kp GRAVE   &kp LBRC     &kp RBRC     &kp LPAR     &kp RPAR      &kp EQUAL                   &kp QMARK  &kp LEFT  &kp DOWN  &kp RIGHT &kp COLON &kp DQT
&trans      &kp LBKT     &kp RBKT     &kp MINUS    &kp UNDER     &kp PLUS      &trans &trans &kp TILDE  &kp LT    &kp GT    &trans    &trans    &trans   
                                      &trans       &trans        &trans        &trans &trans &trans     &mo 0     &trans
			>;
		};
	};
};